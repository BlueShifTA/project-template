[project]
name = "project-template"
version = "0.1.0"
description = "A comprehensive project template with modern tooling"
readme = "README.md"
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]


[tool.uv.workspace]
members = ["projects/"]


[tool.ruff]
line-length = 100
target-version = "py311"
fix = true

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
extend-select = ["RUF045"]
dummy-variable-rgx = "^_$"
select = [
    "F",
    "W",
    "E",
    "N",
    "RET",
    "SLF",
    "G",
    "I",
    "PLR",
    "UP",
    "SIM",
    "B",
    "RUF",
    "TRY",
    "ARG",
    "LOG",
    "ASYNC",
    "BLE",
]
ignore = [
    "E501",
    "RET504",
    "G003",
    "G004",
    "N818",
    "PLR2004",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "TRY003",
    "TRY004",
    "TRY300",
    "ARG002",
    "ASYNC110",
    "ASYNC230",
    "ASYNC109",
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.pyright]
include = ["projects"]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    "**/.venv",
    ".venv",
]
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["projects/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=projects",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--verbose",
]

[tool.coverage.run]
source = ["projects"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
