name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  frontend-lint:
    name: Frontend Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: cd projects/frontend && npm install

      - name: Run ESLint
        run: cd projects/frontend && npm run lint

  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Sync dependencies
        run: uv sync --all-packages --all-groups

      - name: Run ruff linting
        run: uv run ruff check projects/backend

      - name: Run ruff format check
        run: uv run ruff format --check projects/backend

      - name: Run tests
        run: uv run pytest projects/backend/tests -v

      - name: Run tests with coverage
        run: uv run pytest projects/backend/tests --cov=projects/backend/api --cov-report=term --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage Summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          uv run pytest projects/backend/tests --cov=projects/backend/api --cov-report=term | tail -n 10 >> $GITHUB_STEP_SUMMARY
